name: 'equinix-metal-actions-example'

on:
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.METAL_PROJECT_ID }}
  PROJECT_TOKEN: ${{ secrets.METAL_PROJECT_TOKEN }}

jobs:
  manage-metal-resources:
    runs-on: ubuntu-latest
    steps:
#    - name: Create temporary project
#      id: metal-project
#      uses: equinix-labs/metal-project-action@main
#      with:
#        userToken: ${{ secrets.METAL_AUTH_TOKEN }}
#        projectName: gsproject
#        organizationID: saravanan-org
#    - name: Use the Project SSH Key outputs (display it)
#      run: |
#        echo $PROJECT_PRIVATE_SSH_KEY
#        echo $PROJECT_PUBLIC_SSH_KEY
#      env:
#        PROJECT_PRIVATE_SSH_KEY: ${{ steps.metal-project.outputs.projectSSHPrivateKeyBase64 }}
#        PROJECT_PUBLIC_SSH_KEY: ${{ steps.metal-project.outputs.projectSSHPublicKey }}
#    - name: Use the Project ID outputs (display it)
#      run: |
#        echo Equinix Metal Project "$PROJECT_NAME" has ID "$PROJECT_ID"
#      env:
#        PROJECT_ID: ${{ steps.metal-project.outputs.projectID }}
#        PROJECT_NAME: ${{ steps.metal-project.outputs.projectName }}
    - name: Create SSH key and Add to Equinix Project
      run: |
        sudo apt update
        sudo apt install jq -y

        mkdir -p ~/.ssh/
        # ssh-keygen -q -t rsa -b 4096 -C "gh-user" -N '' -f ~/.ssh/id_rsa <<<y >/dev/null 2>&1
        ssh-keygen -q -t rsa -b 4096 -N '' -f ~/.ssh/id_rsa <<<y >/dev/null 2>&1
        SSH_PUB_KEY=`cat ~/.ssh/id_rsa.pub`

        jq_out=`jq -n --arg sshpubkey $SSH_PUB_KEY '{"label": "runner ssh key", "key": $sshpubkey}'`

        curl -X POST -H "Content-Type: application/json" -H "X-Auth-Token: ${{ env.PROJECT_TOKEN }}" "https://api.equinix.com/metal/v1/projects/${{ env.PROJECT_ID }}/ssh-keys" -d "$jq_out"

    - name: Create metal device in project
      id: metal-device
      uses: equinix-labs/metal-device-action@main
      continue-on-error: true
      with:
        metal_auth_token: ${{ env.PROJECT_TOKEN }}
        metal_project_id: ${{ env.PROJECT_ID }}
        metro: da
        plan: m3.small.x86
        os: ubuntu_22_04
        user_data: |
            #!/bin/bash
            echo 'Hello, Equinix Metal!'

    - name: Add metal device ssh key to gh workflow instance
      run: |
        mkdir -p ~/.ssh && touch ~/.ssh/authorized_keys
        # curl -X GET -H "X-Auth-Token: ${{ env.PROJECT_TOKEN }}" "https://api.equinix.com/metal/v1/projects/${{ env.PROJECT_ID }}/ssh-keys" >  ~/.ssh/authorized_keys
        # echo ${{ env.SSH_PUB_KEY }} > ~/.ssh/authorized_keys
        chmod 700 ~/.ssh && chmod 600 ~/.ssh/authorized_keys
        cat ~/.ssh/authorized_keys
        ssh -o StrictHostKeyChecking=no -tt root@${{ steps.metal-device.outputs.ipaddress }}
#    - name: SSH into metal device
#      uses: D3rHase/ssh-command-action@v0.2.2
#      with:
#        # hostname / IP of the server
#        host: ${{ steps.metal-device.outputs.ipaddress }}
#        # private ssh key registered on the server
#        private_key: ${{ steps.metal-project.outputs.projectSSHPrivateKeyBase64 }}

  destroy-metal-resources:
    needs: manage-metal-resources
    runs-on: ubuntu-latest
    steps:
      - name: Delete temporary project & device
        uses: equinix-labs/metal-sweeper-action@main
        with:
          authToken: ${{ env.PROJECT_TOKEN }}
          projectID: ${{ env.PROJECT_ID }}
          keepProject: true
