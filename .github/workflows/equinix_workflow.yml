# In this Demo Github actions workflow, we will create a metal instance in existing project
# Access the metal instance from Github runner and display the cloud-init logs
# To perform this action, we need to create a project in Equinix Metal and add the runner ssh key to the project
# Once the runner ssh key is added to the project, the newly created metal instance will be having the runner ssh key
# So we will be able to access the metal instance and can see the cloud-init logs
# Once the demo is completed, we can delete the project and all the resources will be deleted
# This demo is using the following Github actions
# equinix-labs/metal-device-action@main
# equinix-labs/metal-sweeper-action@main

# In this demo we also used `jq` command to parse the SSH public key into curl command
# We need to pass "-n --arg" to jq command to parse the SSH public key

name: 'Equinix-Metal-Actions-Demo'

on:
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.METAL_PROJECT_ID }}
  PROJECT_TOKEN: ${{ secrets.METAL_PROJECT_TOKEN }}

jobs:
  manage-metal-resources:
    runs-on: ubuntu-latest
    steps:
    - name: Create Runner SSH key and Add to Equinix Project
      run: |
        sudo apt update
        sudo apt install jq -y

        mkdir -p ~/.ssh/
        # ssh-keygen -q -t rsa -b 4096 -C "gh-user" -N '' -f ~/.ssh/id_rsa <<<y >/dev/null 2>&1
        ssh-keygen -q -t rsa -b 4096 -N '' -f ~/.ssh/id_rsa <<<y >/dev/null 2>&1
        SSH_PUB_KEY=`cat ~/.ssh/id_rsa.pub`

        jq_out=`jq -n --arg sshpubkey "$SSH_PUB_KEY" '{"label": "runner ssh key", "key": $sshpubkey}'`

        curl -X POST -H "Content-Type: application/json" -H "X-Auth-Token: ${{ env.PROJECT_TOKEN }}" "https://api.equinix.com/metal/v1/projects/${{ env.PROJECT_ID }}/ssh-keys" -d "$jq_out"

    - name: Create Metal Device in Project
      id: metal-device
      uses: equinix-labs/metal-device-action@main
      continue-on-error: true
      with:
        metal_auth_token: ${{ env.PROJECT_TOKEN }}
        metal_project_id: ${{ env.PROJECT_ID }}
        metro: da
        plan: m3.small.x86
        os: ubuntu_22_04
        user_data: |
            #!/bin/bash
            echo 'Hello, Equinix Metal!'

    - name: SSH into Metal Device and Display CloudInit Logs
      run: |
        ssh -o StrictHostKeyChecking=no -tt root@${{ steps.metal-device.outputs.ipaddress }} 'sudo cat /var/log/cloud-init-output.log; exit'

  destroy-metal-resources:
    needs: manage-metal-resources
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup the Device
        uses: equinix-labs/metal-sweeper-action@main
        with:
          authToken: ${{ env.PROJECT_TOKEN }}
          projectID: ${{ env.PROJECT_ID }}
          keepProject: true # Set to false to delete the project
